Terminais sem uso na gramática

    "type"
    ","
    "error"


Gramática

    0 $accept: program $end

    1 program: list ';'
    2        | ε

    3 list: element
    4     | list ',' element

    5 element: function_definition
    6        | variable_declaration

    7 function_definition: header body

    8 header: "identifier" "->" integer_or_decimal optional_parameter_list ":="

    9 integer_or_decimal: "decimal"
   10                   | "integer"

   11 optional_parameter_list: parameter_list
   12                        | ',' parameter_list
   13                        | ε

   14 parameter_list: parameter
   15               | parameter_list ',' parameter

   16 parameter: "identifier" ":=" integer_or_decimal

   17 body: command_block

   18 command_block: '[' command_sequence ']'
   19              | '[' ']'

   20 command_sequence: simple_command
   21                 | command_sequence simple_command

   22 simple_command: variable_declaration_with_instantiation
   23               | function_call
   24               | attribution_command
   25               | return_command
   26               | flow_control_command

   27 variable_declaration: "variable" "identifier" ":=" var_type

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type optional_instantiation

   29 var_type: "decimal"
   30         | "integer"

   31 optional_instantiation: ',' literal
   32                       | ε

   33 literal: "integer literal"
   34        | "decimal literal"

   35 attribution_command: "identifier" ":=" expression

   36 function_call: "identifier" '(' args ')'

   37 args: ε
   38     | args ',' expression
   39     | expression

   40 return_command: "return" expression ":=" var_type

   41 flow_control_command: conditional_struct
   42                     | iterative_struct

   43 conditional_struct: "if" '(' expression ')' '[' mandatory_block ']' else_block

   44 else_block: ε
   45           | "else" command_block

   46 mandatory_block: mandatory_block simple_command
   47                | simple_command

   48 iterative_struct: "while" '(' expression ')' command_block

   49 expression: logical_or_expression

   50 logical_or_expression: logical_and_expression
   51                      | logical_or_expression '|' logical_and_expression

   52 logical_and_expression: equality_expression
   53                       | logical_and_expression '&' equality_expression

   54 equality_expression: relational_expression
   55                    | equality_expression "==" relational_expression
   56                    | equality_expression "!=" relational_expression

   57 relational_expression: additive_expression
   58                      | relational_expression '<' additive_expression
   59                      | relational_expression '>' additive_expression
   60                      | relational_expression "<=" additive_expression
   61                      | relational_expression ">=" additive_expression

   62 additive_expression: multiplicative_expression
   63                    | additive_expression '+' multiplicative_expression
   64                    | additive_expression '-' multiplicative_expression

   65 multiplicative_expression: unary_expression
   66                          | multiplicative_expression '*' unary_expression
   67                          | multiplicative_expression '/' unary_expression
   68                          | multiplicative_expression '%' unary_expression

   69 unary_expression: primary_expression
   70                 | '+' unary_expression
   71                 | '-' unary_expression
   72                 | '!' unary_expression

   73 primary_expression: "identifier"
   74                   | "integer literal"
   75                   | "decimal literal"
   76                   | '(' expression ')'


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '!' (33) 72
    '%' (37) 68
    '&' (38) 53
    '(' (40) 36 43 48 76
    ')' (41) 36 43 48 76
    '*' (42) 66
    '+' (43) 63 70
    ',' (44) 4 12 15 31 38
    '-' (45) 64 71
    '/' (47) 67
    ';' (59) 1
    '<' (60) 58
    '>' (62) 59
    '[' (91) 18 19 43
    ']' (93) 18 19 43
    '|' (124) 51
    error (256)
    "type" (258)
    "variable" (259) 27 28
    "else" (260) 45
    "decimal" (261) 9 29
    "if" (262) 43
    "integer" (263) 10 30
    ":=" (264) 8 16 27 28 35 40
    "return" (265) 40
    "->" (266) 8
    "while" (267) 48
    "," (268)
    "<=" (269) 60
    ">=" (270) 61
    "==" (271) 55
    "!=" (272) 56
    "identifier" (273) 8 16 27 28 35 36 73
    "integer literal" (274) 33 74
    "decimal literal" (275) 34 75
    "error" (276)


Não terminais com as regras onde eles aparecem

    $accept (38)
        à esquerda: 0
    program (39)
        à esquerda: 1 2
        à direita: 0
    list (40)
        à esquerda: 3 4
        à direita: 1 4
    element (41)
        à esquerda: 5 6
        à direita: 3 4
    function_definition (42)
        à esquerda: 7
        à direita: 5
    header (43)
        à esquerda: 8
        à direita: 7
    integer_or_decimal (44)
        à esquerda: 9 10
        à direita: 8 16
    optional_parameter_list (45)
        à esquerda: 11 12 13
        à direita: 8
    parameter_list (46)
        à esquerda: 14 15
        à direita: 11 12 15
    parameter (47)
        à esquerda: 16
        à direita: 14 15
    body (48)
        à esquerda: 17
        à direita: 7
    command_block (49)
        à esquerda: 18 19
        à direita: 17 45 48
    command_sequence (50)
        à esquerda: 20 21
        à direita: 18 21
    simple_command (51)
        à esquerda: 22 23 24 25 26
        à direita: 20 21 46 47
    variable_declaration (52)
        à esquerda: 27
        à direita: 6
    variable_declaration_with_instantiation (53)
        à esquerda: 28
        à direita: 22
    var_type (54)
        à esquerda: 29 30
        à direita: 27 28 40
    optional_instantiation (55)
        à esquerda: 31 32
        à direita: 28
    literal (56)
        à esquerda: 33 34
        à direita: 31
    attribution_command (57)
        à esquerda: 35
        à direita: 24
    function_call (58)
        à esquerda: 36
        à direita: 23
    args (59)
        à esquerda: 37 38 39
        à direita: 36 38
    return_command (60)
        à esquerda: 40
        à direita: 25
    flow_control_command (61)
        à esquerda: 41 42
        à direita: 26
    conditional_struct (62)
        à esquerda: 43
        à direita: 41
    else_block (63)
        à esquerda: 44 45
        à direita: 43
    mandatory_block (64)
        à esquerda: 46 47
        à direita: 43 46
    iterative_struct (65)
        à esquerda: 48
        à direita: 42
    expression (66)
        à esquerda: 49
        à direita: 35 38 39 40 43 48 76
    logical_or_expression (67)
        à esquerda: 50 51
        à direita: 49 51
    logical_and_expression (68)
        à esquerda: 52 53
        à direita: 50 51 53
    equality_expression (69)
        à esquerda: 54 55 56
        à direita: 52 53 55 56
    relational_expression (70)
        à esquerda: 57 58 59 60 61
        à direita: 54 55 56 58 59 60 61
    additive_expression (71)
        à esquerda: 62 63 64
        à direita: 57 58 59 60 61 63 64
    multiplicative_expression (72)
        à esquerda: 65 66 67 68
        à direita: 62 63 64 66 67 68
    unary_expression (73)
        à esquerda: 69 70 71 72
        à direita: 65 66 67 68 70 71 72
    primary_expression (74)
        à esquerda: 73 74 75 76
        à direita: 69


Estado 0

    0 $accept: • program $end
    1 program: • list ';'
    2        | ε •  [$end]
    3 list: • element
    4     | • list ',' element
    5 element: • function_definition
    6        | • variable_declaration
    7 function_definition: • header body
    8 header: • "identifier" "->" integer_or_decimal optional_parameter_list ":="
   27 variable_declaration: • "variable" "identifier" ":=" var_type

    "variable"    deslocar, e ir ao estado 1
    "identifier"  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 2 (program)

    program               ir ao estado 3
    list                  ir ao estado 4
    element               ir ao estado 5
    function_definition   ir ao estado 6
    header                ir ao estado 7
    variable_declaration  ir ao estado 8


Estado 1

   27 variable_declaration: "variable" • "identifier" ":=" var_type

    "identifier"  deslocar, e ir ao estado 9


Estado 2

    8 header: "identifier" • "->" integer_or_decimal optional_parameter_list ":="

    "->"  deslocar, e ir ao estado 10


Estado 3

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 11


Estado 4

    1 program: list • ';'
    4 list: list • ',' element

    ';'  deslocar, e ir ao estado 12
    ','  deslocar, e ir ao estado 13


Estado 5

    3 list: element •

    $padrão  reduzir usando a regra 3 (list)


Estado 6

    5 element: function_definition •

    $padrão  reduzir usando a regra 5 (element)


Estado 7

    7 function_definition: header • body
   17 body: • command_block
   18 command_block: • '[' command_sequence ']'
   19              | • '[' ']'

    '['  deslocar, e ir ao estado 14

    body           ir ao estado 15
    command_block  ir ao estado 16


Estado 8

    6 element: variable_declaration •

    $padrão  reduzir usando a regra 6 (element)


Estado 9

   27 variable_declaration: "variable" "identifier" • ":=" var_type

    ":="  deslocar, e ir ao estado 17


Estado 10

    8 header: "identifier" "->" • integer_or_decimal optional_parameter_list ":="
    9 integer_or_decimal: • "decimal"
   10                   | • "integer"

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    integer_or_decimal  ir ao estado 20


Estado 11

    0 $accept: program $end •

    $padrão  aceitar


Estado 12

    1 program: list ';' •

    $padrão  reduzir usando a regra 1 (program)


Estado 13

    4 list: list ',' • element
    5 element: • function_definition
    6        | • variable_declaration
    7 function_definition: • header body
    8 header: • "identifier" "->" integer_or_decimal optional_parameter_list ":="
   27 variable_declaration: • "variable" "identifier" ":=" var_type

    "variable"    deslocar, e ir ao estado 1
    "identifier"  deslocar, e ir ao estado 2

    element               ir ao estado 21
    function_definition   ir ao estado 6
    header                ir ao estado 7
    variable_declaration  ir ao estado 8


Estado 14

   18 command_block: '[' • command_sequence ']'
   19              | '[' • ']'
   20 command_sequence: • simple_command
   21                 | • command_sequence simple_command
   22 simple_command: • variable_declaration_with_instantiation
   23               | • function_call
   24               | • attribution_command
   25               | • return_command
   26               | • flow_control_command
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    ']'           deslocar, e ir ao estado 27

    command_sequence                         ir ao estado 28
    simple_command                           ir ao estado 29
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 15

    7 function_definition: header body •

    $padrão  reduzir usando a regra 7 (function_definition)


Estado 16

   17 body: command_block •

    $padrão  reduzir usando a regra 17 (body)


Estado 17

   27 variable_declaration: "variable" "identifier" ":=" • var_type
   29 var_type: • "decimal"
   30         | • "integer"

    "decimal"  deslocar, e ir ao estado 37
    "integer"  deslocar, e ir ao estado 38

    var_type  ir ao estado 39


Estado 18

    9 integer_or_decimal: "decimal" •

    $padrão  reduzir usando a regra 9 (integer_or_decimal)


Estado 19

   10 integer_or_decimal: "integer" •

    $padrão  reduzir usando a regra 10 (integer_or_decimal)


Estado 20

    8 header: "identifier" "->" integer_or_decimal • optional_parameter_list ":="
   11 optional_parameter_list: • parameter_list
   12                        | • ',' parameter_list
   13                        | ε •  [":="]
   14 parameter_list: • parameter
   15               | • parameter_list ',' parameter
   16 parameter: • "identifier" ":=" integer_or_decimal

    "identifier"  deslocar, e ir ao estado 40
    ','           deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 13 (optional_parameter_list)

    optional_parameter_list  ir ao estado 42
    parameter_list           ir ao estado 43
    parameter                ir ao estado 44


Estado 21

    4 list: list ',' element •

    $padrão  reduzir usando a regra 4 (list)


Estado 22

   28 variable_declaration_with_instantiation: "variable" • "identifier" ":=" var_type optional_instantiation

    "identifier"  deslocar, e ir ao estado 45


Estado 23

   43 conditional_struct: "if" • '(' expression ')' '[' mandatory_block ']' else_block

    '('  deslocar, e ir ao estado 46


Estado 24

   40 return_command: "return" • expression ":=" var_type
   49 expression: • logical_or_expression
   50 logical_or_expression: • logical_and_expression
   51                      | • logical_or_expression '|' logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    expression                 ir ao estado 54
    logical_or_expression      ir ao estado 55
    logical_and_expression     ir ao estado 56
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 25

   48 iterative_struct: "while" • '(' expression ')' command_block

    '('  deslocar, e ir ao estado 63


Estado 26

   35 attribution_command: "identifier" • ":=" expression
   36 function_call: "identifier" • '(' args ')'

    ":="  deslocar, e ir ao estado 64
    '('   deslocar, e ir ao estado 65


Estado 27

   19 command_block: '[' ']' •

    $padrão  reduzir usando a regra 19 (command_block)


Estado 28

   18 command_block: '[' command_sequence • ']'
   21 command_sequence: command_sequence • simple_command
   22 simple_command: • variable_declaration_with_instantiation
   23               | • function_call
   24               | • attribution_command
   25               | • return_command
   26               | • flow_control_command
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    ']'           deslocar, e ir ao estado 66

    simple_command                           ir ao estado 67
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 29

   20 command_sequence: simple_command •

    $padrão  reduzir usando a regra 20 (command_sequence)


Estado 30

   22 simple_command: variable_declaration_with_instantiation •

    $padrão  reduzir usando a regra 22 (simple_command)


Estado 31

   24 simple_command: attribution_command •

    $padrão  reduzir usando a regra 24 (simple_command)


Estado 32

   23 simple_command: function_call •

    $padrão  reduzir usando a regra 23 (simple_command)


Estado 33

   25 simple_command: return_command •

    $padrão  reduzir usando a regra 25 (simple_command)


Estado 34

   26 simple_command: flow_control_command •

    $padrão  reduzir usando a regra 26 (simple_command)


Estado 35

   41 flow_control_command: conditional_struct •

    $padrão  reduzir usando a regra 41 (flow_control_command)


Estado 36

   42 flow_control_command: iterative_struct •

    $padrão  reduzir usando a regra 42 (flow_control_command)


Estado 37

   29 var_type: "decimal" •

    $padrão  reduzir usando a regra 29 (var_type)


Estado 38

   30 var_type: "integer" •

    $padrão  reduzir usando a regra 30 (var_type)


Estado 39

   27 variable_declaration: "variable" "identifier" ":=" var_type •

    $padrão  reduzir usando a regra 27 (variable_declaration)


Estado 40

   16 parameter: "identifier" • ":=" integer_or_decimal

    ":="  deslocar, e ir ao estado 68


Estado 41

   12 optional_parameter_list: ',' • parameter_list
   14 parameter_list: • parameter
   15               | • parameter_list ',' parameter
   16 parameter: • "identifier" ":=" integer_or_decimal

    "identifier"  deslocar, e ir ao estado 40

    parameter_list  ir ao estado 69
    parameter       ir ao estado 44


Estado 42

    8 header: "identifier" "->" integer_or_decimal optional_parameter_list • ":="

    ":="  deslocar, e ir ao estado 70


Estado 43

   11 optional_parameter_list: parameter_list •  [":="]
   15 parameter_list: parameter_list • ',' parameter

    ','  deslocar, e ir ao estado 71

    $padrão  reduzir usando a regra 11 (optional_parameter_list)


Estado 44

   14 parameter_list: parameter •

    $padrão  reduzir usando a regra 14 (parameter_list)


Estado 45

   28 variable_declaration_with_instantiation: "variable" "identifier" • ":=" var_type optional_instantiation

    ":="  deslocar, e ir ao estado 72


Estado 46

   43 conditional_struct: "if" '(' • expression ')' '[' mandatory_block ']' else_block
   49 expression: • logical_or_expression
   50 logical_or_expression: • logical_and_expression
   51                      | • logical_or_expression '|' logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    expression                 ir ao estado 73
    logical_or_expression      ir ao estado 55
    logical_and_expression     ir ao estado 56
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 47

   73 primary_expression: "identifier" •

    $padrão  reduzir usando a regra 73 (primary_expression)


Estado 48

   74 primary_expression: "integer literal" •

    $padrão  reduzir usando a regra 74 (primary_expression)


Estado 49

   75 primary_expression: "decimal literal" •

    $padrão  reduzir usando a regra 75 (primary_expression)


Estado 50

   49 expression: • logical_or_expression
   50 logical_or_expression: • logical_and_expression
   51                      | • logical_or_expression '|' logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'
   76                   | '(' • expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    expression                 ir ao estado 74
    logical_or_expression      ir ao estado 55
    logical_and_expression     ir ao estado 56
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 51

   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   70                 | '+' • unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    unary_expression    ir ao estado 75
    primary_expression  ir ao estado 62


Estado 52

   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   71                 | '-' • unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    unary_expression    ir ao estado 76
    primary_expression  ir ao estado 62


Estado 53

   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   72                 | '!' • unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    unary_expression    ir ao estado 77
    primary_expression  ir ao estado 62


Estado 54

   40 return_command: "return" expression • ":=" var_type

    ":="  deslocar, e ir ao estado 78


Estado 55

   49 expression: logical_or_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')']
   51 logical_or_expression: logical_or_expression • '|' logical_and_expression

    '|'  deslocar, e ir ao estado 79

    $padrão  reduzir usando a regra 49 (expression)


Estado 56

   50 logical_or_expression: logical_and_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|']
   53 logical_and_expression: logical_and_expression • '&' equality_expression

    '&'  deslocar, e ir ao estado 80

    $padrão  reduzir usando a regra 50 (logical_or_expression)


Estado 57

   52 logical_and_expression: equality_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|', '&']
   55 equality_expression: equality_expression • "==" relational_expression
   56                    | equality_expression • "!=" relational_expression

    "=="  deslocar, e ir ao estado 81
    "!="  deslocar, e ir ao estado 82

    $padrão  reduzir usando a regra 52 (logical_and_expression)


Estado 58

   54 equality_expression: relational_expression •  ["variable", "if", ":=", "return", "while", "==", "!=", "identifier", ',', ']', ')', '|', '&']
   58 relational_expression: relational_expression • '<' additive_expression
   59                      | relational_expression • '>' additive_expression
   60                      | relational_expression • "<=" additive_expression
   61                      | relational_expression • ">=" additive_expression

    "<="  deslocar, e ir ao estado 83
    ">="  deslocar, e ir ao estado 84
    '<'   deslocar, e ir ao estado 85
    '>'   deslocar, e ir ao estado 86

    $padrão  reduzir usando a regra 54 (equality_expression)


Estado 59

   57 relational_expression: additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   63 additive_expression: additive_expression • '+' multiplicative_expression
   64                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 87
    '-'  deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 57 (relational_expression)


Estado 60

   62 additive_expression: multiplicative_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>', '+', '-']
   66 multiplicative_expression: multiplicative_expression • '*' unary_expression
   67                          | multiplicative_expression • '/' unary_expression
   68                          | multiplicative_expression • '%' unary_expression

    '*'  deslocar, e ir ao estado 89
    '/'  deslocar, e ir ao estado 90
    '%'  deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 62 (additive_expression)


Estado 61

   65 multiplicative_expression: unary_expression •

    $padrão  reduzir usando a regra 65 (multiplicative_expression)


Estado 62

   69 unary_expression: primary_expression •

    $padrão  reduzir usando a regra 69 (unary_expression)


Estado 63

   48 iterative_struct: "while" '(' • expression ')' command_block
   49 expression: • logical_or_expression
   50 logical_or_expression: • logical_and_expression
   51                      | • logical_or_expression '|' logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    expression                 ir ao estado 92
    logical_or_expression      ir ao estado 55
    logical_and_expression     ir ao estado 56
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 64

   35 attribution_command: "identifier" ":=" • expression
   49 expression: • logical_or_expression
   50 logical_or_expression: • logical_and_expression
   51                      | • logical_or_expression '|' logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    expression                 ir ao estado 93
    logical_or_expression      ir ao estado 55
    logical_and_expression     ir ao estado 56
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 65

   36 function_call: "identifier" '(' • args ')'
   37 args: ε •  [',', ')']
   38     | • args ',' expression
   39     | • expression
   49 expression: • logical_or_expression
   50 logical_or_expression: • logical_and_expression
   51                      | • logical_or_expression '|' logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    $padrão  reduzir usando a regra 37 (args)

    args                       ir ao estado 94
    expression                 ir ao estado 95
    logical_or_expression      ir ao estado 55
    logical_and_expression     ir ao estado 56
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 66

   18 command_block: '[' command_sequence ']' •

    $padrão  reduzir usando a regra 18 (command_block)


Estado 67

   21 command_sequence: command_sequence simple_command •

    $padrão  reduzir usando a regra 21 (command_sequence)


Estado 68

    9 integer_or_decimal: • "decimal"
   10                   | • "integer"
   16 parameter: "identifier" ":=" • integer_or_decimal

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    integer_or_decimal  ir ao estado 96


Estado 69

   12 optional_parameter_list: ',' parameter_list •  [":="]
   15 parameter_list: parameter_list • ',' parameter

    ','  deslocar, e ir ao estado 71

    $padrão  reduzir usando a regra 12 (optional_parameter_list)


Estado 70

    8 header: "identifier" "->" integer_or_decimal optional_parameter_list ":=" •

    $padrão  reduzir usando a regra 8 (header)


Estado 71

   15 parameter_list: parameter_list ',' • parameter
   16 parameter: • "identifier" ":=" integer_or_decimal

    "identifier"  deslocar, e ir ao estado 40

    parameter  ir ao estado 97


Estado 72

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" • var_type optional_instantiation
   29 var_type: • "decimal"
   30         | • "integer"

    "decimal"  deslocar, e ir ao estado 37
    "integer"  deslocar, e ir ao estado 38

    var_type  ir ao estado 98


Estado 73

   43 conditional_struct: "if" '(' expression • ')' '[' mandatory_block ']' else_block

    ')'  deslocar, e ir ao estado 99


Estado 74

   76 primary_expression: '(' expression • ')'

    ')'  deslocar, e ir ao estado 100


Estado 75

   70 unary_expression: '+' unary_expression •

    $padrão  reduzir usando a regra 70 (unary_expression)


Estado 76

   71 unary_expression: '-' unary_expression •

    $padrão  reduzir usando a regra 71 (unary_expression)


Estado 77

   72 unary_expression: '!' unary_expression •

    $padrão  reduzir usando a regra 72 (unary_expression)


Estado 78

   29 var_type: • "decimal"
   30         | • "integer"
   40 return_command: "return" expression ":=" • var_type

    "decimal"  deslocar, e ir ao estado 37
    "integer"  deslocar, e ir ao estado 38

    var_type  ir ao estado 101


Estado 79

   51 logical_or_expression: logical_or_expression '|' • logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    logical_and_expression     ir ao estado 102
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 80

   53 logical_and_expression: logical_and_expression '&' • equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    equality_expression        ir ao estado 103
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 81

   55 equality_expression: equality_expression "==" • relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    relational_expression      ir ao estado 104
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 82

   56 equality_expression: equality_expression "!=" • relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    relational_expression      ir ao estado 105
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 83

   60 relational_expression: relational_expression "<=" • additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    additive_expression        ir ao estado 106
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 84

   61 relational_expression: relational_expression ">=" • additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    additive_expression        ir ao estado 107
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 85

   58 relational_expression: relational_expression '<' • additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    additive_expression        ir ao estado 108
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 86

   59 relational_expression: relational_expression '>' • additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    additive_expression        ir ao estado 109
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 87

   63 additive_expression: additive_expression '+' • multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    multiplicative_expression  ir ao estado 110
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 88

   64 additive_expression: additive_expression '-' • multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    multiplicative_expression  ir ao estado 111
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 89

   66 multiplicative_expression: multiplicative_expression '*' • unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    unary_expression    ir ao estado 112
    primary_expression  ir ao estado 62


Estado 90

   67 multiplicative_expression: multiplicative_expression '/' • unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    unary_expression    ir ao estado 113
    primary_expression  ir ao estado 62


Estado 91

   68 multiplicative_expression: multiplicative_expression '%' • unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    unary_expression    ir ao estado 114
    primary_expression  ir ao estado 62


Estado 92

   48 iterative_struct: "while" '(' expression • ')' command_block

    ')'  deslocar, e ir ao estado 115


Estado 93

   35 attribution_command: "identifier" ":=" expression •

    $padrão  reduzir usando a regra 35 (attribution_command)


Estado 94

   36 function_call: "identifier" '(' args • ')'
   38 args: args • ',' expression

    ','  deslocar, e ir ao estado 116
    ')'  deslocar, e ir ao estado 117


Estado 95

   39 args: expression •

    $padrão  reduzir usando a regra 39 (args)


Estado 96

   16 parameter: "identifier" ":=" integer_or_decimal •

    $padrão  reduzir usando a regra 16 (parameter)


Estado 97

   15 parameter_list: parameter_list ',' parameter •

    $padrão  reduzir usando a regra 15 (parameter_list)


Estado 98

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type • optional_instantiation
   31 optional_instantiation: • ',' literal
   32                       | ε •  ["variable", "if", "return", "while", "identifier", ']']

    ','  deslocar, e ir ao estado 118

    $padrão  reduzir usando a regra 32 (optional_instantiation)

    optional_instantiation  ir ao estado 119


Estado 99

   43 conditional_struct: "if" '(' expression ')' • '[' mandatory_block ']' else_block

    '['  deslocar, e ir ao estado 120


Estado 100

   76 primary_expression: '(' expression ')' •

    $padrão  reduzir usando a regra 76 (primary_expression)


Estado 101

   40 return_command: "return" expression ":=" var_type •

    $padrão  reduzir usando a regra 40 (return_command)


Estado 102

   51 logical_or_expression: logical_or_expression '|' logical_and_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|']
   53 logical_and_expression: logical_and_expression • '&' equality_expression

    '&'  deslocar, e ir ao estado 80

    $padrão  reduzir usando a regra 51 (logical_or_expression)


Estado 103

   53 logical_and_expression: logical_and_expression '&' equality_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|', '&']
   55 equality_expression: equality_expression • "==" relational_expression
   56                    | equality_expression • "!=" relational_expression

    "=="  deslocar, e ir ao estado 81
    "!="  deslocar, e ir ao estado 82

    $padrão  reduzir usando a regra 53 (logical_and_expression)


Estado 104

   55 equality_expression: equality_expression "==" relational_expression •  ["variable", "if", ":=", "return", "while", "==", "!=", "identifier", ',', ']', ')', '|', '&']
   58 relational_expression: relational_expression • '<' additive_expression
   59                      | relational_expression • '>' additive_expression
   60                      | relational_expression • "<=" additive_expression
   61                      | relational_expression • ">=" additive_expression

    "<="  deslocar, e ir ao estado 83
    ">="  deslocar, e ir ao estado 84
    '<'   deslocar, e ir ao estado 85
    '>'   deslocar, e ir ao estado 86

    $padrão  reduzir usando a regra 55 (equality_expression)


Estado 105

   56 equality_expression: equality_expression "!=" relational_expression •  ["variable", "if", ":=", "return", "while", "==", "!=", "identifier", ',', ']', ')', '|', '&']
   58 relational_expression: relational_expression • '<' additive_expression
   59                      | relational_expression • '>' additive_expression
   60                      | relational_expression • "<=" additive_expression
   61                      | relational_expression • ">=" additive_expression

    "<="  deslocar, e ir ao estado 83
    ">="  deslocar, e ir ao estado 84
    '<'   deslocar, e ir ao estado 85
    '>'   deslocar, e ir ao estado 86

    $padrão  reduzir usando a regra 56 (equality_expression)


Estado 106

   60 relational_expression: relational_expression "<=" additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   63 additive_expression: additive_expression • '+' multiplicative_expression
   64                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 87
    '-'  deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 60 (relational_expression)


Estado 107

   61 relational_expression: relational_expression ">=" additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   63 additive_expression: additive_expression • '+' multiplicative_expression
   64                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 87
    '-'  deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 61 (relational_expression)


Estado 108

   58 relational_expression: relational_expression '<' additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   63 additive_expression: additive_expression • '+' multiplicative_expression
   64                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 87
    '-'  deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 58 (relational_expression)


Estado 109

   59 relational_expression: relational_expression '>' additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   63 additive_expression: additive_expression • '+' multiplicative_expression
   64                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 87
    '-'  deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 59 (relational_expression)


Estado 110

   63 additive_expression: additive_expression '+' multiplicative_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>', '+', '-']
   66 multiplicative_expression: multiplicative_expression • '*' unary_expression
   67                          | multiplicative_expression • '/' unary_expression
   68                          | multiplicative_expression • '%' unary_expression

    '*'  deslocar, e ir ao estado 89
    '/'  deslocar, e ir ao estado 90
    '%'  deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 63 (additive_expression)


Estado 111

   64 additive_expression: additive_expression '-' multiplicative_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>', '+', '-']
   66 multiplicative_expression: multiplicative_expression • '*' unary_expression
   67                          | multiplicative_expression • '/' unary_expression
   68                          | multiplicative_expression • '%' unary_expression

    '*'  deslocar, e ir ao estado 89
    '/'  deslocar, e ir ao estado 90
    '%'  deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 64 (additive_expression)


Estado 112

   66 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $padrão  reduzir usando a regra 66 (multiplicative_expression)


Estado 113

   67 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $padrão  reduzir usando a regra 67 (multiplicative_expression)


Estado 114

   68 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $padrão  reduzir usando a regra 68 (multiplicative_expression)


Estado 115

   18 command_block: • '[' command_sequence ']'
   19              | • '[' ']'
   48 iterative_struct: "while" '(' expression ')' • command_block

    '['  deslocar, e ir ao estado 14

    command_block  ir ao estado 121


Estado 116

   38 args: args ',' • expression
   49 expression: • logical_or_expression
   50 logical_or_expression: • logical_and_expression
   51                      | • logical_or_expression '|' logical_and_expression
   52 logical_and_expression: • equality_expression
   53                       | • logical_and_expression '&' equality_expression
   54 equality_expression: • relational_expression
   55                    | • equality_expression "==" relational_expression
   56                    | • equality_expression "!=" relational_expression
   57 relational_expression: • additive_expression
   58                      | • relational_expression '<' additive_expression
   59                      | • relational_expression '>' additive_expression
   60                      | • relational_expression "<=" additive_expression
   61                      | • relational_expression ">=" additive_expression
   62 additive_expression: • multiplicative_expression
   63                    | • additive_expression '+' multiplicative_expression
   64                    | • additive_expression '-' multiplicative_expression
   65 multiplicative_expression: • unary_expression
   66                          | • multiplicative_expression '*' unary_expression
   67                          | • multiplicative_expression '/' unary_expression
   68                          | • multiplicative_expression '%' unary_expression
   69 unary_expression: • primary_expression
   70                 | • '+' unary_expression
   71                 | • '-' unary_expression
   72                 | • '!' unary_expression
   73 primary_expression: • "identifier"
   74                   | • "integer literal"
   75                   | • "decimal literal"
   76                   | • '(' expression ')'

    "identifier"       deslocar, e ir ao estado 47
    "integer literal"  deslocar, e ir ao estado 48
    "decimal literal"  deslocar, e ir ao estado 49
    '('                deslocar, e ir ao estado 50
    '+'                deslocar, e ir ao estado 51
    '-'                deslocar, e ir ao estado 52
    '!'                deslocar, e ir ao estado 53

    expression                 ir ao estado 122
    logical_or_expression      ir ao estado 55
    logical_and_expression     ir ao estado 56
    equality_expression        ir ao estado 57
    relational_expression      ir ao estado 58
    additive_expression        ir ao estado 59
    multiplicative_expression  ir ao estado 60
    unary_expression           ir ao estado 61
    primary_expression         ir ao estado 62


Estado 117

   36 function_call: "identifier" '(' args ')' •

    $padrão  reduzir usando a regra 36 (function_call)


Estado 118

   31 optional_instantiation: ',' • literal
   33 literal: • "integer literal"
   34        | • "decimal literal"

    "integer literal"  deslocar, e ir ao estado 123
    "decimal literal"  deslocar, e ir ao estado 124

    literal  ir ao estado 125


Estado 119

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type optional_instantiation •

    $padrão  reduzir usando a regra 28 (variable_declaration_with_instantiation)


Estado 120

   22 simple_command: • variable_declaration_with_instantiation
   23               | • function_call
   24               | • attribution_command
   25               | • return_command
   26               | • flow_control_command
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   43                   | "if" '(' expression ')' '[' • mandatory_block ']' else_block
   46 mandatory_block: • mandatory_block simple_command
   47                | • simple_command
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26

    simple_command                           ir ao estado 126
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    mandatory_block                          ir ao estado 127
    iterative_struct                         ir ao estado 36


Estado 121

   48 iterative_struct: "while" '(' expression ')' command_block •

    $padrão  reduzir usando a regra 48 (iterative_struct)


Estado 122

   38 args: args ',' expression •

    $padrão  reduzir usando a regra 38 (args)


Estado 123

   33 literal: "integer literal" •

    $padrão  reduzir usando a regra 33 (literal)


Estado 124

   34 literal: "decimal literal" •

    $padrão  reduzir usando a regra 34 (literal)


Estado 125

   31 optional_instantiation: ',' literal •

    $padrão  reduzir usando a regra 31 (optional_instantiation)


Estado 126

   47 mandatory_block: simple_command •

    $padrão  reduzir usando a regra 47 (mandatory_block)


Estado 127

   22 simple_command: • variable_declaration_with_instantiation
   23               | • function_call
   24               | • attribution_command
   25               | • return_command
   26               | • flow_control_command
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   43                   | "if" '(' expression ')' '[' mandatory_block • ']' else_block
   46 mandatory_block: mandatory_block • simple_command
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    ']'           deslocar, e ir ao estado 128

    simple_command                           ir ao estado 129
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 128

   43 conditional_struct: "if" '(' expression ')' '[' mandatory_block ']' • else_block
   44 else_block: ε •  ["variable", "if", "return", "while", "identifier", ']']
   45           | • "else" command_block

    "else"  deslocar, e ir ao estado 130

    $padrão  reduzir usando a regra 44 (else_block)

    else_block  ir ao estado 131


Estado 129

   46 mandatory_block: mandatory_block simple_command •

    $padrão  reduzir usando a regra 46 (mandatory_block)


Estado 130

   18 command_block: • '[' command_sequence ']'
   19              | • '[' ']'
   45 else_block: "else" • command_block

    '['  deslocar, e ir ao estado 14

    command_block  ir ao estado 132


Estado 131

   43 conditional_struct: "if" '(' expression ')' '[' mandatory_block ']' else_block •

    $padrão  reduzir usando a regra 43 (conditional_struct)


Estado 132

   45 else_block: "else" command_block •

    $padrão  reduzir usando a regra 45 (else_block)
