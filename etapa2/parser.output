Terminais sem uso na gramática

    "type"
    ","
    "<="
    ">="
    "=="
    "!="
    "integer literal "
    "error"


Estado 65 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: list ';'
    2        | ε

    3 list: element
    4     | list ',' element

    5 element: variable_declaration
    6        | function_definition

    7 variable_declaration: "variable" "identifier" ":=" var_type

    8 function_definition: header body

    9 header: "identifier" "->" integer_or_decimal optional_parameter_list ":="

   10 integer_or_decimal: "decimal"
   11                   | "integer"

   12 optional_parameter_list: ',' parameter_list
   13                        | ε

   14 parameter_list: parameter
   15               | parameter_list ',' parameter

   16 parameter: "identifier" ":=" integer_or_decimal

   17 body: command_block

   18 simple_command: command_block
   19               | variable_declaration_with_instantiation
   20               | function_call
   21               | attribution_command
   22               | return_command
   23               | flow_control_command

   24 command_block: '[' block_body ']'

   25 block_body: ε
   26           | block_body ',' simple_command
   27           | simple_command

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type optional_instantiation

   29 var_type: "decimal"
   30         | "integer"

   31 optional_instantiation: ε
   32                       | ',' literal

   33 literal: "integer literal"
   34        | "decimal literal"

   35 attribution_command: "identifier" ":=" expression

   36 function_call: "identifier" '(' args ')'

   37 args: ε
   38     | args ',' expression
   39     | expression

   40 return_command: "return" expression ":=" var_type

   41 flow_control_command: conditional_struct
   42                     | iterative_struct

   43 conditional_struct: "if" "(" expression ")" '[' mandatory_block ']' else_block

   44 else_block: ε
   45           | "else" command_block

   46 mandatory_block: mandatory_block simple_command
   47                | simple_command

   48 iterative_struct: "while" '(' expression ')' command_block

   49 expression: "decimal"


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '(' (40) 36 48
    ')' (41) 36 48
    ',' (44) 4 12 15 26 32 38
    ';' (59) 1
    '[' (91) 24 43
    ']' (93) 24 43
    error (256)
    "type" (258)
    "variable" (259) 7 28
    "else" (260) 45
    "decimal" (261) 10 29 49
    "if" (262) 43
    "integer" (263) 11 30
    ":=" (264) 7 9 16 28 35 40
    "return" (265) 40
    "->" (266) 9
    "while" (267) 48
    "," (268)
    "<=" (269)
    ">=" (270)
    "==" (271)
    "!=" (272)
    "identifier" (273) 7 9 16 28 35 36
    "integer literal " (274)
    "decimal literal" (275) 34
    "error" (276)
    "integer literal" (277) 33
    "(" (278) 43
    ")" (279) 43


Não terminais com as regras onde eles aparecem

    $accept (31)
        à esquerda: 0
    program (32)
        à esquerda: 1 2
        à direita: 0
    list (33)
        à esquerda: 3 4
        à direita: 1 4
    element (34)
        à esquerda: 5 6
        à direita: 3 4
    variable_declaration (35)
        à esquerda: 7
        à direita: 5
    function_definition (36)
        à esquerda: 8
        à direita: 6
    header (37)
        à esquerda: 9
        à direita: 8
    integer_or_decimal (38)
        à esquerda: 10 11
        à direita: 9 16
    optional_parameter_list (39)
        à esquerda: 12 13
        à direita: 9
    parameter_list (40)
        à esquerda: 14 15
        à direita: 12 15
    parameter (41)
        à esquerda: 16
        à direita: 14 15
    body (42)
        à esquerda: 17
        à direita: 8
    simple_command (43)
        à esquerda: 18 19 20 21 22 23
        à direita: 26 27 46 47
    command_block (44)
        à esquerda: 24
        à direita: 17 18 45 48
    block_body (45)
        à esquerda: 25 26 27
        à direita: 24 26
    variable_declaration_with_instantiation (46)
        à esquerda: 28
        à direita: 19
    var_type (47)
        à esquerda: 29 30
        à direita: 7 28 40
    optional_instantiation (48)
        à esquerda: 31 32
        à direita: 28
    literal (49)
        à esquerda: 33 34
        à direita: 32
    attribution_command (50)
        à esquerda: 35
        à direita: 21
    function_call (51)
        à esquerda: 36
        à direita: 20
    args (52)
        à esquerda: 37 38 39
        à direita: 36 38
    return_command (53)
        à esquerda: 40
        à direita: 22
    flow_control_command (54)
        à esquerda: 41 42
        à direita: 23
    conditional_struct (55)
        à esquerda: 43
        à direita: 41
    else_block (56)
        à esquerda: 44 45
        à direita: 43
    mandatory_block (57)
        à esquerda: 46 47
        à direita: 43 46
    iterative_struct (58)
        à esquerda: 48
        à direita: 42
    expression (59)
        à esquerda: 49
        à direita: 35 38 39 40 43 48


Estado 0

    0 $accept: • program $end
    1 program: • list ';'
    2        | ε •  [$end]
    3 list: • element
    4     | • list ',' element
    5 element: • variable_declaration
    6        | • function_definition
    7 variable_declaration: • "variable" "identifier" ":=" var_type
    8 function_definition: • header body
    9 header: • "identifier" "->" integer_or_decimal optional_parameter_list ":="

    "variable"    deslocar, e ir ao estado 1
    "identifier"  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 2 (program)

    program               ir ao estado 3
    list                  ir ao estado 4
    element               ir ao estado 5
    variable_declaration  ir ao estado 6
    function_definition   ir ao estado 7
    header                ir ao estado 8


Estado 1

    7 variable_declaration: "variable" • "identifier" ":=" var_type

    "identifier"  deslocar, e ir ao estado 9


Estado 2

    9 header: "identifier" • "->" integer_or_decimal optional_parameter_list ":="

    "->"  deslocar, e ir ao estado 10


Estado 3

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 11


Estado 4

    1 program: list • ';'
    4 list: list • ',' element

    ';'  deslocar, e ir ao estado 12
    ','  deslocar, e ir ao estado 13


Estado 5

    3 list: element •

    $padrão  reduzir usando a regra 3 (list)


Estado 6

    5 element: variable_declaration •

    $padrão  reduzir usando a regra 5 (element)


Estado 7

    6 element: function_definition •

    $padrão  reduzir usando a regra 6 (element)


Estado 8

    8 function_definition: header • body
   17 body: • command_block
   24 command_block: • '[' block_body ']'

    '['  deslocar, e ir ao estado 14

    body           ir ao estado 15
    command_block  ir ao estado 16


Estado 9

    7 variable_declaration: "variable" "identifier" • ":=" var_type

    ":="  deslocar, e ir ao estado 17


Estado 10

    9 header: "identifier" "->" • integer_or_decimal optional_parameter_list ":="
   10 integer_or_decimal: • "decimal"
   11                   | • "integer"

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    integer_or_decimal  ir ao estado 20


Estado 11

    0 $accept: program $end •

    $padrão  aceitar


Estado 12

    1 program: list ';' •

    $padrão  reduzir usando a regra 1 (program)


Estado 13

    4 list: list ',' • element
    5 element: • variable_declaration
    6        | • function_definition
    7 variable_declaration: • "variable" "identifier" ":=" var_type
    8 function_definition: • header body
    9 header: • "identifier" "->" integer_or_decimal optional_parameter_list ":="

    "variable"    deslocar, e ir ao estado 1
    "identifier"  deslocar, e ir ao estado 2

    element               ir ao estado 21
    variable_declaration  ir ao estado 6
    function_definition   ir ao estado 7
    header                ir ao estado 8


Estado 14

   18 simple_command: • command_block
   19               | • variable_declaration_with_instantiation
   20               | • function_call
   21               | • attribution_command
   22               | • return_command
   23               | • flow_control_command
   24 command_block: • '[' block_body ']'
   24              | '[' • block_body ']'
   25 block_body: ε •  [',', ']']
   26           | • block_body ',' simple_command
   27           | • simple_command
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" "(" expression ")" '[' mandatory_block ']' else_block
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    '['           deslocar, e ir ao estado 14

    $padrão  reduzir usando a regra 25 (block_body)

    simple_command                           ir ao estado 27
    command_block                            ir ao estado 28
    block_body                               ir ao estado 29
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 15

    8 function_definition: header body •

    $padrão  reduzir usando a regra 8 (function_definition)


Estado 16

   17 body: command_block •

    $padrão  reduzir usando a regra 17 (body)


Estado 17

    7 variable_declaration: "variable" "identifier" ":=" • var_type
   29 var_type: • "decimal"
   30         | • "integer"

    "decimal"  deslocar, e ir ao estado 37
    "integer"  deslocar, e ir ao estado 38

    var_type  ir ao estado 39


Estado 18

   10 integer_or_decimal: "decimal" •

    $padrão  reduzir usando a regra 10 (integer_or_decimal)


Estado 19

   11 integer_or_decimal: "integer" •

    $padrão  reduzir usando a regra 11 (integer_or_decimal)


Estado 20

    9 header: "identifier" "->" integer_or_decimal • optional_parameter_list ":="
   12 optional_parameter_list: • ',' parameter_list
   13                        | ε •  [":="]

    ','  deslocar, e ir ao estado 40

    $padrão  reduzir usando a regra 13 (optional_parameter_list)

    optional_parameter_list  ir ao estado 41


Estado 21

    4 list: list ',' element •

    $padrão  reduzir usando a regra 4 (list)


Estado 22

   28 variable_declaration_with_instantiation: "variable" • "identifier" ":=" var_type optional_instantiation

    "identifier"  deslocar, e ir ao estado 42


Estado 23

   43 conditional_struct: "if" • "(" expression ")" '[' mandatory_block ']' else_block

    "("  deslocar, e ir ao estado 43


Estado 24

   40 return_command: "return" • expression ":=" var_type
   49 expression: • "decimal"

    "decimal"  deslocar, e ir ao estado 44

    expression  ir ao estado 45


Estado 25

   48 iterative_struct: "while" • '(' expression ')' command_block

    '('  deslocar, e ir ao estado 46


Estado 26

   35 attribution_command: "identifier" • ":=" expression
   36 function_call: "identifier" • '(' args ')'

    ":="  deslocar, e ir ao estado 47
    '('   deslocar, e ir ao estado 48


Estado 27

   27 block_body: simple_command •

    $padrão  reduzir usando a regra 27 (block_body)


Estado 28

   18 simple_command: command_block •

    $padrão  reduzir usando a regra 18 (simple_command)


Estado 29

   24 command_block: '[' block_body • ']'
   26 block_body: block_body • ',' simple_command

    ','  deslocar, e ir ao estado 49
    ']'  deslocar, e ir ao estado 50


Estado 30

   19 simple_command: variable_declaration_with_instantiation •

    $padrão  reduzir usando a regra 19 (simple_command)


Estado 31

   21 simple_command: attribution_command •

    $padrão  reduzir usando a regra 21 (simple_command)


Estado 32

   20 simple_command: function_call •

    $padrão  reduzir usando a regra 20 (simple_command)


Estado 33

   22 simple_command: return_command •

    $padrão  reduzir usando a regra 22 (simple_command)


Estado 34

   23 simple_command: flow_control_command •

    $padrão  reduzir usando a regra 23 (simple_command)


Estado 35

   41 flow_control_command: conditional_struct •

    $padrão  reduzir usando a regra 41 (flow_control_command)


Estado 36

   42 flow_control_command: iterative_struct •

    $padrão  reduzir usando a regra 42 (flow_control_command)


Estado 37

   29 var_type: "decimal" •

    $padrão  reduzir usando a regra 29 (var_type)


Estado 38

   30 var_type: "integer" •

    $padrão  reduzir usando a regra 30 (var_type)


Estado 39

    7 variable_declaration: "variable" "identifier" ":=" var_type •

    $padrão  reduzir usando a regra 7 (variable_declaration)


Estado 40

   12 optional_parameter_list: ',' • parameter_list
   14 parameter_list: • parameter
   15               | • parameter_list ',' parameter
   16 parameter: • "identifier" ":=" integer_or_decimal

    "identifier"  deslocar, e ir ao estado 51

    parameter_list  ir ao estado 52
    parameter       ir ao estado 53


Estado 41

    9 header: "identifier" "->" integer_or_decimal optional_parameter_list • ":="

    ":="  deslocar, e ir ao estado 54


Estado 42

   28 variable_declaration_with_instantiation: "variable" "identifier" • ":=" var_type optional_instantiation

    ":="  deslocar, e ir ao estado 55


Estado 43

   43 conditional_struct: "if" "(" • expression ")" '[' mandatory_block ']' else_block
   49 expression: • "decimal"

    "decimal"  deslocar, e ir ao estado 44

    expression  ir ao estado 56


Estado 44

   49 expression: "decimal" •

    $padrão  reduzir usando a regra 49 (expression)


Estado 45

   40 return_command: "return" expression • ":=" var_type

    ":="  deslocar, e ir ao estado 57


Estado 46

   48 iterative_struct: "while" '(' • expression ')' command_block
   49 expression: • "decimal"

    "decimal"  deslocar, e ir ao estado 44

    expression  ir ao estado 58


Estado 47

   35 attribution_command: "identifier" ":=" • expression
   49 expression: • "decimal"

    "decimal"  deslocar, e ir ao estado 44

    expression  ir ao estado 59


Estado 48

   36 function_call: "identifier" '(' • args ')'
   37 args: ε •  [',', ')']
   38     | • args ',' expression
   39     | • expression
   49 expression: • "decimal"

    "decimal"  deslocar, e ir ao estado 44

    $padrão  reduzir usando a regra 37 (args)

    args        ir ao estado 60
    expression  ir ao estado 61


Estado 49

   18 simple_command: • command_block
   19               | • variable_declaration_with_instantiation
   20               | • function_call
   21               | • attribution_command
   22               | • return_command
   23               | • flow_control_command
   24 command_block: • '[' block_body ']'
   26 block_body: block_body ',' • simple_command
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" "(" expression ")" '[' mandatory_block ']' else_block
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    '['           deslocar, e ir ao estado 14

    simple_command                           ir ao estado 62
    command_block                            ir ao estado 28
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 50

   24 command_block: '[' block_body ']' •

    $padrão  reduzir usando a regra 24 (command_block)


Estado 51

   16 parameter: "identifier" • ":=" integer_or_decimal

    ":="  deslocar, e ir ao estado 63


Estado 52

   12 optional_parameter_list: ',' parameter_list •  [":="]
   15 parameter_list: parameter_list • ',' parameter

    ','  deslocar, e ir ao estado 64

    $padrão  reduzir usando a regra 12 (optional_parameter_list)


Estado 53

   14 parameter_list: parameter •

    $padrão  reduzir usando a regra 14 (parameter_list)


Estado 54

    9 header: "identifier" "->" integer_or_decimal optional_parameter_list ":=" •

    $padrão  reduzir usando a regra 9 (header)


Estado 55

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" • var_type optional_instantiation
   29 var_type: • "decimal"
   30         | • "integer"

    "decimal"  deslocar, e ir ao estado 37
    "integer"  deslocar, e ir ao estado 38

    var_type  ir ao estado 65


Estado 56

   43 conditional_struct: "if" "(" expression • ")" '[' mandatory_block ']' else_block

    ")"  deslocar, e ir ao estado 66


Estado 57

   29 var_type: • "decimal"
   30         | • "integer"
   40 return_command: "return" expression ":=" • var_type

    "decimal"  deslocar, e ir ao estado 37
    "integer"  deslocar, e ir ao estado 38

    var_type  ir ao estado 67


Estado 58

   48 iterative_struct: "while" '(' expression • ')' command_block

    ')'  deslocar, e ir ao estado 68


Estado 59

   35 attribution_command: "identifier" ":=" expression •

    $padrão  reduzir usando a regra 35 (attribution_command)


Estado 60

   36 function_call: "identifier" '(' args • ')'
   38 args: args • ',' expression

    ','  deslocar, e ir ao estado 69
    ')'  deslocar, e ir ao estado 70


Estado 61

   39 args: expression •

    $padrão  reduzir usando a regra 39 (args)


Estado 62

   26 block_body: block_body ',' simple_command •

    $padrão  reduzir usando a regra 26 (block_body)


Estado 63

   10 integer_or_decimal: • "decimal"
   11                   | • "integer"
   16 parameter: "identifier" ":=" • integer_or_decimal

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    integer_or_decimal  ir ao estado 71


Estado 64

   15 parameter_list: parameter_list ',' • parameter
   16 parameter: • "identifier" ":=" integer_or_decimal

    "identifier"  deslocar, e ir ao estado 51

    parameter  ir ao estado 72


Estado 65

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type • optional_instantiation
   31 optional_instantiation: ε •  ["variable", "if", "return", "while", "identifier", ',', '[', ']']
   32                       | • ',' literal

    ','  deslocar, e ir ao estado 73

    ','      [reduzir usando a regra 31 (optional_instantiation)]
    $padrão  reduzir usando a regra 31 (optional_instantiation)

    optional_instantiation  ir ao estado 74

    conflito de deslocamento/redução no token ',':
       31 optional_instantiation: ε •
       32 optional_instantiation: • ',' literal
      Primeiro exemplo: header '[' "variable" "identifier" ":=" var_type • ',' literal ',' simple_command ']' ';' $end
      Derivação do deslocamento
        $accept
        ↳ 0: program                                                                                                                                              $end
             ↳ 1: list                                                                                                                                        ';'
                  ↳ 3: element
                       ↳ 6: function_definition
                            ↳ 8: header body
                                        ↳ 17: command_block
                                              ↳ 24: '[' block_body                                                                                        ']'
                                                        ↳ 26: block_body                                                               ',' simple_command
                                                              ↳ 27: variable_declaration_with_instantiation
                                                                    ↳ 28: "variable" "identifier" ":=" var_type optional_instantiation
                                                                                                                ↳ 32: • ',' literal
      Segundo exemplo: header '[' "variable" "identifier" ":=" var_type • ',' simple_command ']' ';' $end
      Derivação de redução
        $accept
        ↳ 0: program                                                                                                                                                    $end
             ↳ 1: list                                                                                                                                              ';'
                  ↳ 3: element
                       ↳ 6: function_definition
                            ↳ 8: header body
                                        ↳ 17: command_block
                                              ↳ 24: '[' block_body                                                                                              ']'
                                                        ↳ 26: block_body                                                                     ',' simple_command
                                                              ↳ 27: simple_command
                                                                    ↳ 19: variable_declaration_with_instantiation
                                                                          ↳ 28: "variable" "identifier" ":=" var_type optional_instantiation
                                                                                                                      ↳ 31: ε •



Estado 66

   43 conditional_struct: "if" "(" expression ")" • '[' mandatory_block ']' else_block

    '['  deslocar, e ir ao estado 75


Estado 67

   40 return_command: "return" expression ":=" var_type •

    $padrão  reduzir usando a regra 40 (return_command)


Estado 68

   24 command_block: • '[' block_body ']'
   48 iterative_struct: "while" '(' expression ')' • command_block

    '['  deslocar, e ir ao estado 14

    command_block  ir ao estado 76


Estado 69

   38 args: args ',' • expression
   49 expression: • "decimal"

    "decimal"  deslocar, e ir ao estado 44

    expression  ir ao estado 77


Estado 70

   36 function_call: "identifier" '(' args ')' •

    $padrão  reduzir usando a regra 36 (function_call)


Estado 71

   16 parameter: "identifier" ":=" integer_or_decimal •

    $padrão  reduzir usando a regra 16 (parameter)


Estado 72

   15 parameter_list: parameter_list ',' parameter •

    $padrão  reduzir usando a regra 15 (parameter_list)


Estado 73

   32 optional_instantiation: ',' • literal
   33 literal: • "integer literal"
   34        | • "decimal literal"

    "decimal literal"  deslocar, e ir ao estado 78
    "integer literal"  deslocar, e ir ao estado 79

    literal  ir ao estado 80


Estado 74

   28 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type optional_instantiation •

    $padrão  reduzir usando a regra 28 (variable_declaration_with_instantiation)


Estado 75

   18 simple_command: • command_block
   19               | • variable_declaration_with_instantiation
   20               | • function_call
   21               | • attribution_command
   22               | • return_command
   23               | • flow_control_command
   24 command_block: • '[' block_body ']'
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" "(" expression ")" '[' mandatory_block ']' else_block
   43                   | "if" "(" expression ")" '[' • mandatory_block ']' else_block
   46 mandatory_block: • mandatory_block simple_command
   47                | • simple_command
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    '['           deslocar, e ir ao estado 14

    simple_command                           ir ao estado 81
    command_block                            ir ao estado 28
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    mandatory_block                          ir ao estado 82
    iterative_struct                         ir ao estado 36


Estado 76

   48 iterative_struct: "while" '(' expression ')' command_block •

    $padrão  reduzir usando a regra 48 (iterative_struct)


Estado 77

   38 args: args ',' expression •

    $padrão  reduzir usando a regra 38 (args)


Estado 78

   34 literal: "decimal literal" •

    $padrão  reduzir usando a regra 34 (literal)


Estado 79

   33 literal: "integer literal" •

    $padrão  reduzir usando a regra 33 (literal)


Estado 80

   32 optional_instantiation: ',' literal •

    $padrão  reduzir usando a regra 32 (optional_instantiation)


Estado 81

   47 mandatory_block: simple_command •

    $padrão  reduzir usando a regra 47 (mandatory_block)


Estado 82

   18 simple_command: • command_block
   19               | • variable_declaration_with_instantiation
   20               | • function_call
   21               | • attribution_command
   22               | • return_command
   23               | • flow_control_command
   24 command_block: • '[' block_body ']'
   28 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   35 attribution_command: • "identifier" ":=" expression
   36 function_call: • "identifier" '(' args ')'
   40 return_command: • "return" expression ":=" var_type
   41 flow_control_command: • conditional_struct
   42                     | • iterative_struct
   43 conditional_struct: • "if" "(" expression ")" '[' mandatory_block ']' else_block
   43                   | "if" "(" expression ")" '[' mandatory_block • ']' else_block
   46 mandatory_block: mandatory_block • simple_command
   48 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    '['           deslocar, e ir ao estado 14
    ']'           deslocar, e ir ao estado 83

    simple_command                           ir ao estado 84
    command_block                            ir ao estado 28
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 83

   43 conditional_struct: "if" "(" expression ")" '[' mandatory_block ']' • else_block
   44 else_block: ε •  ["variable", "if", "return", "while", "identifier", ',', '[', ']']
   45           | • "else" command_block

    "else"  deslocar, e ir ao estado 85

    $padrão  reduzir usando a regra 44 (else_block)

    else_block  ir ao estado 86


Estado 84

   46 mandatory_block: mandatory_block simple_command •

    $padrão  reduzir usando a regra 46 (mandatory_block)


Estado 85

   24 command_block: • '[' block_body ']'
   45 else_block: "else" • command_block

    '['  deslocar, e ir ao estado 14

    command_block  ir ao estado 87


Estado 86

   43 conditional_struct: "if" "(" expression ")" '[' mandatory_block ']' else_block •

    $padrão  reduzir usando a regra 43 (conditional_struct)


Estado 87

   45 else_block: "else" command_block •

    $padrão  reduzir usando a regra 45 (else_block)
