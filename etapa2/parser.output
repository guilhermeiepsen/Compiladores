Terminais sem uso na gramática

    "type"
    "error"


Gramática

    0 $accept: program $end

    1 program: list ';'
    2        | ε

    3 list: element
    4     | list ',' element

    5 element: function_definition
    6        | variable_declaration

    7 function_definition: header body

    8 header: "identifier" "->" var_type optional_parameter_list ":="

    9 optional_parameter_list: parameter_list
   10                        | "with" parameter_list
   11                        | ε

   12 parameter_list: parameter
   13               | parameter_list ',' parameter

   14 parameter: "identifier" ":=" var_type

   15 body: command_block

   16 command_block: '[' command_sequence ']'
   17              | '[' ']'

   18 command_sequence: simple_command
   19                 | command_sequence simple_command

   20 simple_command: variable_declaration_with_instantiation
   21               | function_call
   22               | attribution_command
   23               | return_command
   24               | flow_control_command

   25 variable_declaration: "variable" "identifier" ":=" var_type

   26 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type optional_instantiation

   27 var_type: "decimal"
   28         | "integer"

   29 optional_instantiation: "with" literal
   30                       | ε

   31 literal: "integer literal"
   32        | "decimal literal"

   33 attribution_command: "identifier" ":=" expression

   34 function_call: "identifier" '(' args ')'

   35 args: ε
   36     | args ',' expression
   37     | expression

   38 return_command: "return" expression ":=" var_type

   39 flow_control_command: conditional_struct
   40                     | iterative_struct

   41 conditional_struct: "if" '(' expression ')' '[' mandatory_block ']' else_block

   42 else_block: ε
   43           | "else" command_block

   44 mandatory_block: mandatory_block simple_command
   45                | simple_command

   46 iterative_struct: "while" '(' expression ')' command_block

   47 expression: logical_or_expression

   48 logical_or_expression: logical_and_expression
   49                      | logical_or_expression '|' logical_and_expression

   50 logical_and_expression: equality_expression
   51                       | logical_and_expression '&' equality_expression

   52 equality_expression: relational_expression
   53                    | equality_expression "==" relational_expression
   54                    | equality_expression "!=" relational_expression

   55 relational_expression: additive_expression
   56                      | relational_expression '<' additive_expression
   57                      | relational_expression '>' additive_expression
   58                      | relational_expression "<=" additive_expression
   59                      | relational_expression ">=" additive_expression

   60 additive_expression: multiplicative_expression
   61                    | additive_expression '+' multiplicative_expression
   62                    | additive_expression '-' multiplicative_expression

   63 multiplicative_expression: unary_expression
   64                          | multiplicative_expression '*' unary_expression
   65                          | multiplicative_expression '/' unary_expression
   66                          | multiplicative_expression '%' unary_expression

   67 unary_expression: primary_expression
   68                 | '+' unary_expression
   69                 | '-' unary_expression
   70                 | '!' unary_expression

   71 primary_expression: "identifier"
   72                   | "integer literal"
   73                   | "decimal literal"
   74                   | '(' expression ')'
   75                   | function_call


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '!' (33) 70
    '%' (37) 66
    '&' (38) 51
    '(' (40) 34 41 46 74
    ')' (41) 34 41 46 74
    '*' (42) 64
    '+' (43) 61 68
    ',' (44) 4 13 36
    '-' (45) 62 69
    '/' (47) 65
    ';' (59) 1
    '<' (60) 56
    '>' (62) 57
    '[' (91) 16 17 41
    ']' (93) 16 17 41
    '|' (124) 49
    error (256)
    "type" (258)
    "variable" (259) 25 26
    "else" (260) 43
    "decimal" (261) 27
    "if" (262) 41
    "integer" (263) 28
    ":=" (264) 8 14 25 26 33 38
    "return" (265) 38
    "->" (266) 8
    "while" (267) 46
    "with" (268) 10 29
    "<=" (269) 58
    ">=" (270) 59
    "==" (271) 53
    "!=" (272) 54
    "identifier" (273) 8 14 25 26 33 34 71
    "integer literal" (274) 31 72
    "decimal literal" (275) 32 73
    "error" (276)


Não terminais com as regras onde eles aparecem

    $accept (38)
        à esquerda: 0
    program (39)
        à esquerda: 1 2
        à direita: 0
    list (40)
        à esquerda: 3 4
        à direita: 1 4
    element (41)
        à esquerda: 5 6
        à direita: 3 4
    function_definition (42)
        à esquerda: 7
        à direita: 5
    header (43)
        à esquerda: 8
        à direita: 7
    optional_parameter_list (44)
        à esquerda: 9 10 11
        à direita: 8
    parameter_list (45)
        à esquerda: 12 13
        à direita: 9 10 13
    parameter (46)
        à esquerda: 14
        à direita: 12 13
    body (47)
        à esquerda: 15
        à direita: 7
    command_block (48)
        à esquerda: 16 17
        à direita: 15 43 46
    command_sequence (49)
        à esquerda: 18 19
        à direita: 16 19
    simple_command (50)
        à esquerda: 20 21 22 23 24
        à direita: 18 19 44 45
    variable_declaration (51)
        à esquerda: 25
        à direita: 6
    variable_declaration_with_instantiation (52)
        à esquerda: 26
        à direita: 20
    var_type (53)
        à esquerda: 27 28
        à direita: 8 14 25 26 38
    optional_instantiation (54)
        à esquerda: 29 30
        à direita: 26
    literal (55)
        à esquerda: 31 32
        à direita: 29
    attribution_command (56)
        à esquerda: 33
        à direita: 22
    function_call (57)
        à esquerda: 34
        à direita: 21 75
    args (58)
        à esquerda: 35 36 37
        à direita: 34 36
    return_command (59)
        à esquerda: 38
        à direita: 23
    flow_control_command (60)
        à esquerda: 39 40
        à direita: 24
    conditional_struct (61)
        à esquerda: 41
        à direita: 39
    else_block (62)
        à esquerda: 42 43
        à direita: 41
    mandatory_block (63)
        à esquerda: 44 45
        à direita: 41 44
    iterative_struct (64)
        à esquerda: 46
        à direita: 40
    expression (65)
        à esquerda: 47
        à direita: 33 36 37 38 41 46 74
    logical_or_expression (66)
        à esquerda: 48 49
        à direita: 47 49
    logical_and_expression (67)
        à esquerda: 50 51
        à direita: 48 49 51
    equality_expression (68)
        à esquerda: 52 53 54
        à direita: 50 51 53 54
    relational_expression (69)
        à esquerda: 55 56 57 58 59
        à direita: 52 53 54 56 57 58 59
    additive_expression (70)
        à esquerda: 60 61 62
        à direita: 55 56 57 58 59 61 62
    multiplicative_expression (71)
        à esquerda: 63 64 65 66
        à direita: 60 61 62 64 65 66
    unary_expression (72)
        à esquerda: 67 68 69 70
        à direita: 63 64 65 66 68 69 70
    primary_expression (73)
        à esquerda: 71 72 73 74 75
        à direita: 67


Estado 0

    0 $accept: • program $end
    1 program: • list ';'
    2        | ε •  [$end]
    3 list: • element
    4     | • list ',' element
    5 element: • function_definition
    6        | • variable_declaration
    7 function_definition: • header body
    8 header: • "identifier" "->" var_type optional_parameter_list ":="
   25 variable_declaration: • "variable" "identifier" ":=" var_type

    "variable"    deslocar, e ir ao estado 1
    "identifier"  deslocar, e ir ao estado 2

    $padrão  reduzir usando a regra 2 (program)

    program               ir ao estado 3
    list                  ir ao estado 4
    element               ir ao estado 5
    function_definition   ir ao estado 6
    header                ir ao estado 7
    variable_declaration  ir ao estado 8


Estado 1

   25 variable_declaration: "variable" • "identifier" ":=" var_type

    "identifier"  deslocar, e ir ao estado 9


Estado 2

    8 header: "identifier" • "->" var_type optional_parameter_list ":="

    "->"  deslocar, e ir ao estado 10


Estado 3

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 11


Estado 4

    1 program: list • ';'
    4 list: list • ',' element

    ';'  deslocar, e ir ao estado 12
    ','  deslocar, e ir ao estado 13


Estado 5

    3 list: element •

    $padrão  reduzir usando a regra 3 (list)


Estado 6

    5 element: function_definition •

    $padrão  reduzir usando a regra 5 (element)


Estado 7

    7 function_definition: header • body
   15 body: • command_block
   16 command_block: • '[' command_sequence ']'
   17              | • '[' ']'

    '['  deslocar, e ir ao estado 14

    body           ir ao estado 15
    command_block  ir ao estado 16


Estado 8

    6 element: variable_declaration •

    $padrão  reduzir usando a regra 6 (element)


Estado 9

   25 variable_declaration: "variable" "identifier" • ":=" var_type

    ":="  deslocar, e ir ao estado 17


Estado 10

    8 header: "identifier" "->" • var_type optional_parameter_list ":="
   27 var_type: • "decimal"
   28         | • "integer"

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    var_type  ir ao estado 20


Estado 11

    0 $accept: program $end •

    $padrão  aceitar


Estado 12

    1 program: list ';' •

    $padrão  reduzir usando a regra 1 (program)


Estado 13

    4 list: list ',' • element
    5 element: • function_definition
    6        | • variable_declaration
    7 function_definition: • header body
    8 header: • "identifier" "->" var_type optional_parameter_list ":="
   25 variable_declaration: • "variable" "identifier" ":=" var_type

    "variable"    deslocar, e ir ao estado 1
    "identifier"  deslocar, e ir ao estado 2

    element               ir ao estado 21
    function_definition   ir ao estado 6
    header                ir ao estado 7
    variable_declaration  ir ao estado 8


Estado 14

   16 command_block: '[' • command_sequence ']'
   17              | '[' • ']'
   18 command_sequence: • simple_command
   19                 | • command_sequence simple_command
   20 simple_command: • variable_declaration_with_instantiation
   21               | • function_call
   22               | • attribution_command
   23               | • return_command
   24               | • flow_control_command
   26 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   33 attribution_command: • "identifier" ":=" expression
   34 function_call: • "identifier" '(' args ')'
   38 return_command: • "return" expression ":=" var_type
   39 flow_control_command: • conditional_struct
   40                     | • iterative_struct
   41 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   46 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    ']'           deslocar, e ir ao estado 27

    command_sequence                         ir ao estado 28
    simple_command                           ir ao estado 29
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 15

    7 function_definition: header body •

    $padrão  reduzir usando a regra 7 (function_definition)


Estado 16

   15 body: command_block •

    $padrão  reduzir usando a regra 15 (body)


Estado 17

   25 variable_declaration: "variable" "identifier" ":=" • var_type
   27 var_type: • "decimal"
   28         | • "integer"

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    var_type  ir ao estado 37


Estado 18

   27 var_type: "decimal" •

    $padrão  reduzir usando a regra 27 (var_type)


Estado 19

   28 var_type: "integer" •

    $padrão  reduzir usando a regra 28 (var_type)


Estado 20

    8 header: "identifier" "->" var_type • optional_parameter_list ":="
    9 optional_parameter_list: • parameter_list
   10                        | • "with" parameter_list
   11                        | ε •  [":="]
   12 parameter_list: • parameter
   13               | • parameter_list ',' parameter
   14 parameter: • "identifier" ":=" var_type

    "with"        deslocar, e ir ao estado 38
    "identifier"  deslocar, e ir ao estado 39

    $padrão  reduzir usando a regra 11 (optional_parameter_list)

    optional_parameter_list  ir ao estado 40
    parameter_list           ir ao estado 41
    parameter                ir ao estado 42


Estado 21

    4 list: list ',' element •

    $padrão  reduzir usando a regra 4 (list)


Estado 22

   26 variable_declaration_with_instantiation: "variable" • "identifier" ":=" var_type optional_instantiation

    "identifier"  deslocar, e ir ao estado 43


Estado 23

   41 conditional_struct: "if" • '(' expression ')' '[' mandatory_block ']' else_block

    '('  deslocar, e ir ao estado 44


Estado 24

   34 function_call: • "identifier" '(' args ')'
   38 return_command: "return" • expression ":=" var_type
   47 expression: • logical_or_expression
   48 logical_or_expression: • logical_and_expression
   49                      | • logical_or_expression '|' logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    expression                 ir ao estado 53
    logical_or_expression      ir ao estado 54
    logical_and_expression     ir ao estado 55
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 25

   46 iterative_struct: "while" • '(' expression ')' command_block

    '('  deslocar, e ir ao estado 62


Estado 26

   33 attribution_command: "identifier" • ":=" expression
   34 function_call: "identifier" • '(' args ')'

    ":="  deslocar, e ir ao estado 63
    '('   deslocar, e ir ao estado 64


Estado 27

   17 command_block: '[' ']' •

    $padrão  reduzir usando a regra 17 (command_block)


Estado 28

   16 command_block: '[' command_sequence • ']'
   19 command_sequence: command_sequence • simple_command
   20 simple_command: • variable_declaration_with_instantiation
   21               | • function_call
   22               | • attribution_command
   23               | • return_command
   24               | • flow_control_command
   26 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   33 attribution_command: • "identifier" ":=" expression
   34 function_call: • "identifier" '(' args ')'
   38 return_command: • "return" expression ":=" var_type
   39 flow_control_command: • conditional_struct
   40                     | • iterative_struct
   41 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   46 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    ']'           deslocar, e ir ao estado 65

    simple_command                           ir ao estado 66
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 29

   18 command_sequence: simple_command •

    $padrão  reduzir usando a regra 18 (command_sequence)


Estado 30

   20 simple_command: variable_declaration_with_instantiation •

    $padrão  reduzir usando a regra 20 (simple_command)


Estado 31

   22 simple_command: attribution_command •

    $padrão  reduzir usando a regra 22 (simple_command)


Estado 32

   21 simple_command: function_call •

    $padrão  reduzir usando a regra 21 (simple_command)


Estado 33

   23 simple_command: return_command •

    $padrão  reduzir usando a regra 23 (simple_command)


Estado 34

   24 simple_command: flow_control_command •

    $padrão  reduzir usando a regra 24 (simple_command)


Estado 35

   39 flow_control_command: conditional_struct •

    $padrão  reduzir usando a regra 39 (flow_control_command)


Estado 36

   40 flow_control_command: iterative_struct •

    $padrão  reduzir usando a regra 40 (flow_control_command)


Estado 37

   25 variable_declaration: "variable" "identifier" ":=" var_type •

    $padrão  reduzir usando a regra 25 (variable_declaration)


Estado 38

   10 optional_parameter_list: "with" • parameter_list
   12 parameter_list: • parameter
   13               | • parameter_list ',' parameter
   14 parameter: • "identifier" ":=" var_type

    "identifier"  deslocar, e ir ao estado 39

    parameter_list  ir ao estado 67
    parameter       ir ao estado 42


Estado 39

   14 parameter: "identifier" • ":=" var_type

    ":="  deslocar, e ir ao estado 68


Estado 40

    8 header: "identifier" "->" var_type optional_parameter_list • ":="

    ":="  deslocar, e ir ao estado 69


Estado 41

    9 optional_parameter_list: parameter_list •  [":="]
   13 parameter_list: parameter_list • ',' parameter

    ','  deslocar, e ir ao estado 70

    $padrão  reduzir usando a regra 9 (optional_parameter_list)


Estado 42

   12 parameter_list: parameter •

    $padrão  reduzir usando a regra 12 (parameter_list)


Estado 43

   26 variable_declaration_with_instantiation: "variable" "identifier" • ":=" var_type optional_instantiation

    ":="  deslocar, e ir ao estado 71


Estado 44

   34 function_call: • "identifier" '(' args ')'
   41 conditional_struct: "if" '(' • expression ')' '[' mandatory_block ']' else_block
   47 expression: • logical_or_expression
   48 logical_or_expression: • logical_and_expression
   49                      | • logical_or_expression '|' logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    expression                 ir ao estado 72
    logical_or_expression      ir ao estado 54
    logical_and_expression     ir ao estado 55
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 45

   34 function_call: "identifier" • '(' args ')'
   71 primary_expression: "identifier" •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>', '+', '-', '*', '/', '%']

    '('  deslocar, e ir ao estado 64

    $padrão  reduzir usando a regra 71 (primary_expression)


Estado 46

   72 primary_expression: "integer literal" •

    $padrão  reduzir usando a regra 72 (primary_expression)


Estado 47

   73 primary_expression: "decimal literal" •

    $padrão  reduzir usando a regra 73 (primary_expression)


Estado 48

   34 function_call: • "identifier" '(' args ')'
   47 expression: • logical_or_expression
   48 logical_or_expression: • logical_and_expression
   49                      | • logical_or_expression '|' logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   74                   | '(' • expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    expression                 ir ao estado 73
    logical_or_expression      ir ao estado 54
    logical_and_expression     ir ao estado 55
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 49

   34 function_call: • "identifier" '(' args ')'
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   68                 | '+' • unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call       ir ao estado 52
    unary_expression    ir ao estado 74
    primary_expression  ir ao estado 61


Estado 50

   34 function_call: • "identifier" '(' args ')'
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   69                 | '-' • unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call       ir ao estado 52
    unary_expression    ir ao estado 75
    primary_expression  ir ao estado 61


Estado 51

   34 function_call: • "identifier" '(' args ')'
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   70                 | '!' • unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call       ir ao estado 52
    unary_expression    ir ao estado 76
    primary_expression  ir ao estado 61


Estado 52

   75 primary_expression: function_call •

    $padrão  reduzir usando a regra 75 (primary_expression)


Estado 53

   38 return_command: "return" expression • ":=" var_type

    ":="  deslocar, e ir ao estado 77


Estado 54

   47 expression: logical_or_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')']
   49 logical_or_expression: logical_or_expression • '|' logical_and_expression

    '|'  deslocar, e ir ao estado 78

    $padrão  reduzir usando a regra 47 (expression)


Estado 55

   48 logical_or_expression: logical_and_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|']
   51 logical_and_expression: logical_and_expression • '&' equality_expression

    '&'  deslocar, e ir ao estado 79

    $padrão  reduzir usando a regra 48 (logical_or_expression)


Estado 56

   50 logical_and_expression: equality_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|', '&']
   53 equality_expression: equality_expression • "==" relational_expression
   54                    | equality_expression • "!=" relational_expression

    "=="  deslocar, e ir ao estado 80
    "!="  deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 50 (logical_and_expression)


Estado 57

   52 equality_expression: relational_expression •  ["variable", "if", ":=", "return", "while", "==", "!=", "identifier", ',', ']', ')', '|', '&']
   56 relational_expression: relational_expression • '<' additive_expression
   57                      | relational_expression • '>' additive_expression
   58                      | relational_expression • "<=" additive_expression
   59                      | relational_expression • ">=" additive_expression

    "<="  deslocar, e ir ao estado 82
    ">="  deslocar, e ir ao estado 83
    '<'   deslocar, e ir ao estado 84
    '>'   deslocar, e ir ao estado 85

    $padrão  reduzir usando a regra 52 (equality_expression)


Estado 58

   55 relational_expression: additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   61 additive_expression: additive_expression • '+' multiplicative_expression
   62                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 86
    '-'  deslocar, e ir ao estado 87

    $padrão  reduzir usando a regra 55 (relational_expression)


Estado 59

   60 additive_expression: multiplicative_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>', '+', '-']
   64 multiplicative_expression: multiplicative_expression • '*' unary_expression
   65                          | multiplicative_expression • '/' unary_expression
   66                          | multiplicative_expression • '%' unary_expression

    '*'  deslocar, e ir ao estado 88
    '/'  deslocar, e ir ao estado 89
    '%'  deslocar, e ir ao estado 90

    $padrão  reduzir usando a regra 60 (additive_expression)


Estado 60

   63 multiplicative_expression: unary_expression •

    $padrão  reduzir usando a regra 63 (multiplicative_expression)


Estado 61

   67 unary_expression: primary_expression •

    $padrão  reduzir usando a regra 67 (unary_expression)


Estado 62

   34 function_call: • "identifier" '(' args ')'
   46 iterative_struct: "while" '(' • expression ')' command_block
   47 expression: • logical_or_expression
   48 logical_or_expression: • logical_and_expression
   49                      | • logical_or_expression '|' logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    expression                 ir ao estado 91
    logical_or_expression      ir ao estado 54
    logical_and_expression     ir ao estado 55
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 63

   33 attribution_command: "identifier" ":=" • expression
   34 function_call: • "identifier" '(' args ')'
   47 expression: • logical_or_expression
   48 logical_or_expression: • logical_and_expression
   49                      | • logical_or_expression '|' logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    expression                 ir ao estado 92
    logical_or_expression      ir ao estado 54
    logical_and_expression     ir ao estado 55
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 64

   34 function_call: • "identifier" '(' args ')'
   34              | "identifier" '(' • args ')'
   35 args: ε •  [',', ')']
   36     | • args ',' expression
   37     | • expression
   47 expression: • logical_or_expression
   48 logical_or_expression: • logical_and_expression
   49                      | • logical_or_expression '|' logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    $padrão  reduzir usando a regra 35 (args)

    function_call              ir ao estado 52
    args                       ir ao estado 93
    expression                 ir ao estado 94
    logical_or_expression      ir ao estado 54
    logical_and_expression     ir ao estado 55
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 65

   16 command_block: '[' command_sequence ']' •

    $padrão  reduzir usando a regra 16 (command_block)


Estado 66

   19 command_sequence: command_sequence simple_command •

    $padrão  reduzir usando a regra 19 (command_sequence)


Estado 67

   10 optional_parameter_list: "with" parameter_list •  [":="]
   13 parameter_list: parameter_list • ',' parameter

    ','  deslocar, e ir ao estado 70

    $padrão  reduzir usando a regra 10 (optional_parameter_list)


Estado 68

   14 parameter: "identifier" ":=" • var_type
   27 var_type: • "decimal"
   28         | • "integer"

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    var_type  ir ao estado 95


Estado 69

    8 header: "identifier" "->" var_type optional_parameter_list ":=" •

    $padrão  reduzir usando a regra 8 (header)


Estado 70

   13 parameter_list: parameter_list ',' • parameter
   14 parameter: • "identifier" ":=" var_type

    "identifier"  deslocar, e ir ao estado 39

    parameter  ir ao estado 96


Estado 71

   26 variable_declaration_with_instantiation: "variable" "identifier" ":=" • var_type optional_instantiation
   27 var_type: • "decimal"
   28         | • "integer"

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    var_type  ir ao estado 97


Estado 72

   41 conditional_struct: "if" '(' expression • ')' '[' mandatory_block ']' else_block

    ')'  deslocar, e ir ao estado 98


Estado 73

   74 primary_expression: '(' expression • ')'

    ')'  deslocar, e ir ao estado 99


Estado 74

   68 unary_expression: '+' unary_expression •

    $padrão  reduzir usando a regra 68 (unary_expression)


Estado 75

   69 unary_expression: '-' unary_expression •

    $padrão  reduzir usando a regra 69 (unary_expression)


Estado 76

   70 unary_expression: '!' unary_expression •

    $padrão  reduzir usando a regra 70 (unary_expression)


Estado 77

   27 var_type: • "decimal"
   28         | • "integer"
   38 return_command: "return" expression ":=" • var_type

    "decimal"  deslocar, e ir ao estado 18
    "integer"  deslocar, e ir ao estado 19

    var_type  ir ao estado 100


Estado 78

   34 function_call: • "identifier" '(' args ')'
   49 logical_or_expression: logical_or_expression '|' • logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    logical_and_expression     ir ao estado 101
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 79

   34 function_call: • "identifier" '(' args ')'
   51 logical_and_expression: logical_and_expression '&' • equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    equality_expression        ir ao estado 102
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 80

   34 function_call: • "identifier" '(' args ')'
   53 equality_expression: equality_expression "==" • relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    relational_expression      ir ao estado 103
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 81

   34 function_call: • "identifier" '(' args ')'
   54 equality_expression: equality_expression "!=" • relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    relational_expression      ir ao estado 104
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 82

   34 function_call: • "identifier" '(' args ')'
   58 relational_expression: relational_expression "<=" • additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    additive_expression        ir ao estado 105
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 83

   34 function_call: • "identifier" '(' args ')'
   59 relational_expression: relational_expression ">=" • additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    additive_expression        ir ao estado 106
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 84

   34 function_call: • "identifier" '(' args ')'
   56 relational_expression: relational_expression '<' • additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    additive_expression        ir ao estado 107
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 85

   34 function_call: • "identifier" '(' args ')'
   57 relational_expression: relational_expression '>' • additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    additive_expression        ir ao estado 108
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 86

   34 function_call: • "identifier" '(' args ')'
   61 additive_expression: additive_expression '+' • multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    multiplicative_expression  ir ao estado 109
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 87

   34 function_call: • "identifier" '(' args ')'
   62 additive_expression: additive_expression '-' • multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    multiplicative_expression  ir ao estado 110
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 88

   34 function_call: • "identifier" '(' args ')'
   64 multiplicative_expression: multiplicative_expression '*' • unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call       ir ao estado 52
    unary_expression    ir ao estado 111
    primary_expression  ir ao estado 61


Estado 89

   34 function_call: • "identifier" '(' args ')'
   65 multiplicative_expression: multiplicative_expression '/' • unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call       ir ao estado 52
    unary_expression    ir ao estado 112
    primary_expression  ir ao estado 61


Estado 90

   34 function_call: • "identifier" '(' args ')'
   66 multiplicative_expression: multiplicative_expression '%' • unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call       ir ao estado 52
    unary_expression    ir ao estado 113
    primary_expression  ir ao estado 61


Estado 91

   46 iterative_struct: "while" '(' expression • ')' command_block

    ')'  deslocar, e ir ao estado 114


Estado 92

   33 attribution_command: "identifier" ":=" expression •

    $padrão  reduzir usando a regra 33 (attribution_command)


Estado 93

   34 function_call: "identifier" '(' args • ')'
   36 args: args • ',' expression

    ','  deslocar, e ir ao estado 115
    ')'  deslocar, e ir ao estado 116


Estado 94

   37 args: expression •

    $padrão  reduzir usando a regra 37 (args)


Estado 95

   14 parameter: "identifier" ":=" var_type •

    $padrão  reduzir usando a regra 14 (parameter)


Estado 96

   13 parameter_list: parameter_list ',' parameter •

    $padrão  reduzir usando a regra 13 (parameter_list)


Estado 97

   26 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type • optional_instantiation
   29 optional_instantiation: • "with" literal
   30                       | ε •  ["variable", "if", "return", "while", "identifier", ']']

    "with"  deslocar, e ir ao estado 117

    $padrão  reduzir usando a regra 30 (optional_instantiation)

    optional_instantiation  ir ao estado 118


Estado 98

   41 conditional_struct: "if" '(' expression ')' • '[' mandatory_block ']' else_block

    '['  deslocar, e ir ao estado 119


Estado 99

   74 primary_expression: '(' expression ')' •

    $padrão  reduzir usando a regra 74 (primary_expression)


Estado 100

   38 return_command: "return" expression ":=" var_type •

    $padrão  reduzir usando a regra 38 (return_command)


Estado 101

   49 logical_or_expression: logical_or_expression '|' logical_and_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|']
   51 logical_and_expression: logical_and_expression • '&' equality_expression

    '&'  deslocar, e ir ao estado 79

    $padrão  reduzir usando a regra 49 (logical_or_expression)


Estado 102

   51 logical_and_expression: logical_and_expression '&' equality_expression •  ["variable", "if", ":=", "return", "while", "identifier", ',', ']', ')', '|', '&']
   53 equality_expression: equality_expression • "==" relational_expression
   54                    | equality_expression • "!=" relational_expression

    "=="  deslocar, e ir ao estado 80
    "!="  deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 51 (logical_and_expression)


Estado 103

   53 equality_expression: equality_expression "==" relational_expression •  ["variable", "if", ":=", "return", "while", "==", "!=", "identifier", ',', ']', ')', '|', '&']
   56 relational_expression: relational_expression • '<' additive_expression
   57                      | relational_expression • '>' additive_expression
   58                      | relational_expression • "<=" additive_expression
   59                      | relational_expression • ">=" additive_expression

    "<="  deslocar, e ir ao estado 82
    ">="  deslocar, e ir ao estado 83
    '<'   deslocar, e ir ao estado 84
    '>'   deslocar, e ir ao estado 85

    $padrão  reduzir usando a regra 53 (equality_expression)


Estado 104

   54 equality_expression: equality_expression "!=" relational_expression •  ["variable", "if", ":=", "return", "while", "==", "!=", "identifier", ',', ']', ')', '|', '&']
   56 relational_expression: relational_expression • '<' additive_expression
   57                      | relational_expression • '>' additive_expression
   58                      | relational_expression • "<=" additive_expression
   59                      | relational_expression • ">=" additive_expression

    "<="  deslocar, e ir ao estado 82
    ">="  deslocar, e ir ao estado 83
    '<'   deslocar, e ir ao estado 84
    '>'   deslocar, e ir ao estado 85

    $padrão  reduzir usando a regra 54 (equality_expression)


Estado 105

   58 relational_expression: relational_expression "<=" additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   61 additive_expression: additive_expression • '+' multiplicative_expression
   62                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 86
    '-'  deslocar, e ir ao estado 87

    $padrão  reduzir usando a regra 58 (relational_expression)


Estado 106

   59 relational_expression: relational_expression ">=" additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   61 additive_expression: additive_expression • '+' multiplicative_expression
   62                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 86
    '-'  deslocar, e ir ao estado 87

    $padrão  reduzir usando a regra 59 (relational_expression)


Estado 107

   56 relational_expression: relational_expression '<' additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   61 additive_expression: additive_expression • '+' multiplicative_expression
   62                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 86
    '-'  deslocar, e ir ao estado 87

    $padrão  reduzir usando a regra 56 (relational_expression)


Estado 108

   57 relational_expression: relational_expression '>' additive_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>']
   61 additive_expression: additive_expression • '+' multiplicative_expression
   62                    | additive_expression • '-' multiplicative_expression

    '+'  deslocar, e ir ao estado 86
    '-'  deslocar, e ir ao estado 87

    $padrão  reduzir usando a regra 57 (relational_expression)


Estado 109

   61 additive_expression: additive_expression '+' multiplicative_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>', '+', '-']
   64 multiplicative_expression: multiplicative_expression • '*' unary_expression
   65                          | multiplicative_expression • '/' unary_expression
   66                          | multiplicative_expression • '%' unary_expression

    '*'  deslocar, e ir ao estado 88
    '/'  deslocar, e ir ao estado 89
    '%'  deslocar, e ir ao estado 90

    $padrão  reduzir usando a regra 61 (additive_expression)


Estado 110

   62 additive_expression: additive_expression '-' multiplicative_expression •  ["variable", "if", ":=", "return", "while", "<=", ">=", "==", "!=", "identifier", ',', ']', ')', '|', '&', '<', '>', '+', '-']
   64 multiplicative_expression: multiplicative_expression • '*' unary_expression
   65                          | multiplicative_expression • '/' unary_expression
   66                          | multiplicative_expression • '%' unary_expression

    '*'  deslocar, e ir ao estado 88
    '/'  deslocar, e ir ao estado 89
    '%'  deslocar, e ir ao estado 90

    $padrão  reduzir usando a regra 62 (additive_expression)


Estado 111

   64 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $padrão  reduzir usando a regra 64 (multiplicative_expression)


Estado 112

   65 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $padrão  reduzir usando a regra 65 (multiplicative_expression)


Estado 113

   66 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $padrão  reduzir usando a regra 66 (multiplicative_expression)


Estado 114

   16 command_block: • '[' command_sequence ']'
   17              | • '[' ']'
   46 iterative_struct: "while" '(' expression ')' • command_block

    '['  deslocar, e ir ao estado 14

    command_block  ir ao estado 120


Estado 115

   34 function_call: • "identifier" '(' args ')'
   36 args: args ',' • expression
   47 expression: • logical_or_expression
   48 logical_or_expression: • logical_and_expression
   49                      | • logical_or_expression '|' logical_and_expression
   50 logical_and_expression: • equality_expression
   51                       | • logical_and_expression '&' equality_expression
   52 equality_expression: • relational_expression
   53                    | • equality_expression "==" relational_expression
   54                    | • equality_expression "!=" relational_expression
   55 relational_expression: • additive_expression
   56                      | • relational_expression '<' additive_expression
   57                      | • relational_expression '>' additive_expression
   58                      | • relational_expression "<=" additive_expression
   59                      | • relational_expression ">=" additive_expression
   60 additive_expression: • multiplicative_expression
   61                    | • additive_expression '+' multiplicative_expression
   62                    | • additive_expression '-' multiplicative_expression
   63 multiplicative_expression: • unary_expression
   64                          | • multiplicative_expression '*' unary_expression
   65                          | • multiplicative_expression '/' unary_expression
   66                          | • multiplicative_expression '%' unary_expression
   67 unary_expression: • primary_expression
   68                 | • '+' unary_expression
   69                 | • '-' unary_expression
   70                 | • '!' unary_expression
   71 primary_expression: • "identifier"
   72                   | • "integer literal"
   73                   | • "decimal literal"
   74                   | • '(' expression ')'
   75                   | • function_call

    "identifier"       deslocar, e ir ao estado 45
    "integer literal"  deslocar, e ir ao estado 46
    "decimal literal"  deslocar, e ir ao estado 47
    '('                deslocar, e ir ao estado 48
    '+'                deslocar, e ir ao estado 49
    '-'                deslocar, e ir ao estado 50
    '!'                deslocar, e ir ao estado 51

    function_call              ir ao estado 52
    expression                 ir ao estado 121
    logical_or_expression      ir ao estado 54
    logical_and_expression     ir ao estado 55
    equality_expression        ir ao estado 56
    relational_expression      ir ao estado 57
    additive_expression        ir ao estado 58
    multiplicative_expression  ir ao estado 59
    unary_expression           ir ao estado 60
    primary_expression         ir ao estado 61


Estado 116

   34 function_call: "identifier" '(' args ')' •

    $padrão  reduzir usando a regra 34 (function_call)


Estado 117

   29 optional_instantiation: "with" • literal
   31 literal: • "integer literal"
   32        | • "decimal literal"

    "integer literal"  deslocar, e ir ao estado 122
    "decimal literal"  deslocar, e ir ao estado 123

    literal  ir ao estado 124


Estado 118

   26 variable_declaration_with_instantiation: "variable" "identifier" ":=" var_type optional_instantiation •

    $padrão  reduzir usando a regra 26 (variable_declaration_with_instantiation)


Estado 119

   20 simple_command: • variable_declaration_with_instantiation
   21               | • function_call
   22               | • attribution_command
   23               | • return_command
   24               | • flow_control_command
   26 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   33 attribution_command: • "identifier" ":=" expression
   34 function_call: • "identifier" '(' args ')'
   38 return_command: • "return" expression ":=" var_type
   39 flow_control_command: • conditional_struct
   40                     | • iterative_struct
   41 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   41                   | "if" '(' expression ')' '[' • mandatory_block ']' else_block
   44 mandatory_block: • mandatory_block simple_command
   45                | • simple_command
   46 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26

    simple_command                           ir ao estado 125
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    mandatory_block                          ir ao estado 126
    iterative_struct                         ir ao estado 36


Estado 120

   46 iterative_struct: "while" '(' expression ')' command_block •

    $padrão  reduzir usando a regra 46 (iterative_struct)


Estado 121

   36 args: args ',' expression •

    $padrão  reduzir usando a regra 36 (args)


Estado 122

   31 literal: "integer literal" •

    $padrão  reduzir usando a regra 31 (literal)


Estado 123

   32 literal: "decimal literal" •

    $padrão  reduzir usando a regra 32 (literal)


Estado 124

   29 optional_instantiation: "with" literal •

    $padrão  reduzir usando a regra 29 (optional_instantiation)


Estado 125

   45 mandatory_block: simple_command •

    $padrão  reduzir usando a regra 45 (mandatory_block)


Estado 126

   20 simple_command: • variable_declaration_with_instantiation
   21               | • function_call
   22               | • attribution_command
   23               | • return_command
   24               | • flow_control_command
   26 variable_declaration_with_instantiation: • "variable" "identifier" ":=" var_type optional_instantiation
   33 attribution_command: • "identifier" ":=" expression
   34 function_call: • "identifier" '(' args ')'
   38 return_command: • "return" expression ":=" var_type
   39 flow_control_command: • conditional_struct
   40                     | • iterative_struct
   41 conditional_struct: • "if" '(' expression ')' '[' mandatory_block ']' else_block
   41                   | "if" '(' expression ')' '[' mandatory_block • ']' else_block
   44 mandatory_block: mandatory_block • simple_command
   46 iterative_struct: • "while" '(' expression ')' command_block

    "variable"    deslocar, e ir ao estado 22
    "if"          deslocar, e ir ao estado 23
    "return"      deslocar, e ir ao estado 24
    "while"       deslocar, e ir ao estado 25
    "identifier"  deslocar, e ir ao estado 26
    ']'           deslocar, e ir ao estado 127

    simple_command                           ir ao estado 128
    variable_declaration_with_instantiation  ir ao estado 30
    attribution_command                      ir ao estado 31
    function_call                            ir ao estado 32
    return_command                           ir ao estado 33
    flow_control_command                     ir ao estado 34
    conditional_struct                       ir ao estado 35
    iterative_struct                         ir ao estado 36


Estado 127

   41 conditional_struct: "if" '(' expression ')' '[' mandatory_block ']' • else_block
   42 else_block: ε •  ["variable", "if", "return", "while", "identifier", ']']
   43           | • "else" command_block

    "else"  deslocar, e ir ao estado 129

    $padrão  reduzir usando a regra 42 (else_block)

    else_block  ir ao estado 130


Estado 128

   44 mandatory_block: mandatory_block simple_command •

    $padrão  reduzir usando a regra 44 (mandatory_block)


Estado 129

   16 command_block: • '[' command_sequence ']'
   17              | • '[' ']'
   43 else_block: "else" • command_block

    '['  deslocar, e ir ao estado 14

    command_block  ir ao estado 131


Estado 130

   41 conditional_struct: "if" '(' expression ')' '[' mandatory_block ']' else_block •

    $padrão  reduzir usando a regra 41 (conditional_struct)


Estado 131

   43 else_block: "else" command_block •

    $padrão  reduzir usando a regra 43 (else_block)
